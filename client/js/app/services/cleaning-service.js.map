{"version":3,"sources":["../../../../development/js/app/services/cleaning-service.js"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,WAAf,EACK,OADL,CACa,iBADb,EACgC,CAAC,YAAW;AACpC,SAAK,KAAL,GAAa,UAAS,GAAT,EAAc;;;AAGvB,iBAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,gBAAI,SAAS,WAAW,GAAX,CAAb;AACA,mBAAO,MAAM,MAAN,IAAgB,SAAhB,GAA4B,MAAnC;AACH;;;AAGD,YAAI,UAAU,IAAI,IAAJ,CAAS,IAAT,CAAc,KAA5B;YACI,YAAY,QAAQ,CAAR,EAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAS,EAAT,EAAa;AACzC,gBAAI,QAAQ,UAAU,GAAG,KAAb,CAAZ;gBACI,QAAQ,UAAU,GAAG,KAAb,CADZ;gBAEI,SAAS,UAAU,GAAG,MAAb,CAFb;gBAGI,MAAO,CAAC,MAAM,KAAN,CAAD,IAAiB,CAAC,MAAM,KAAN,CAAnB,GAAmC,SAAS,KAAK,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,MAAlB,GAA2B,KAApC,CAAnC,GAAgF,SAH1F;gBAII,OAAQ,CAAC,MAAM,MAAN,CAAD,IAAkB,CAAC,MAAM,KAAN,CAApB,GAAoC,SAAS,KAA7C,GAAqD,SAJhE;gBAKI,MAAM,UAAU,GAAG,GAAb,CALV;gBAMI,KAAK,GAAG,EANZ;gBAOI,OAAO,GAAG,IAPd;gBAQI,SAAS,GAAG,MARhB;;AAUI,oBAAQ,MAAM,KAAN,IAAe,KAAf,GAAuB,QAAM,KAAK,GAAL,CAAS,EAAT,EAAa,CAAb,CAArC;;AAEJ,mBAAO;AACH,oBAAI,EADD;AAEH,6BAAa,QAAQ,CAAR,EAAW,GAFrB;AAGH,yBAAS,EAHN;AAIH,sBAAM,IAJH;AAKH,wBAAQ,MALL;AAMH,2BAAW;AACP,yBAAK,GADE;AAEP,2BAAO,KAFA;AAGP,0BAAM,IAHC;AAIP,yBAAK,GAJE;AAKP,2BAAO;AALA;AANR,aAAP;AAcH,SA3BW,CADhB;;;;AAgCA,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,UAAU,MAA9B,EAAsC,IAAI,CAA1C,EAA6C,GAA7C,EAAkD;AAC9C,gBAAI,QAAQ,UAAU,CAAV,CAAZ;gBACI,KAAK,MAAM,EADf;AAEA,iBAAK,IAAI,IAAI,CAAR,EAAW,KAAK,QAAQ,MAA7B,EAAqC,IAAI,EAAzC,EAA6C,GAA7C,EAAkD;AAC9C,oBAAI,UAAU,QAAQ,CAAR,CAAd;AACA,oBAAI,QAAQ,GAAR,KAAgB,MAAM,SAA1B,EAAqC;AACjC,wBAAI,WAAW,QAAQ,IAAR,CAAa,MAAb,CAAoB,UAAS,OAAT,EAAkB;AAC7C,+BAAO,QAAQ,EAAR,KAAe,EAAtB;AACH,qBAFU,CAAf;wBAGI,QAAQ,SAAS,MAAT,GAAkB,WAAW,SAAS,CAAT,EAAY,KAAvB,CAAlB,GAAkD,SAH9D;wBAII,SAAU,UAAU,SAAX,GAAwB,SAAxB,GAAoC,CAAC,CAAC,QAAQ,MAAM,OAAN,CAAc,KAAvB,IAAiC,MAAM,OAAN,CAAc,KAA/C,GAAwD,GAAzD,EAA8D,OAA9D,CAAsE,CAAtE,IAA2E,GAJ5H;AAKA,0BAAM,KAAN,CAAY,IAAZ,CAAiB;AACb,+BAAO,QAAQ,GADF;AAEb,+BAAO,KAFM;AAGb,gCAAQ;AAHK,qBAAjB;AAKH;AACJ;AACJ;AACD,oBAAY,UAAU,MAAV,CAAiB,UAAS,KAAT,EAAgB;AACzC,mBAAO,MAAM,OAAN,CAAc,KAAd,GAAsB,CAA7B;AACH,SAFW,CAAZ;;AAIA,eAAO,SAAP;AACH,KAjED;AAkEH,CAnE2B,CADhC","file":"cleaning-service.js","sourcesContent":["angular.module('GoldPulse')\n    .service('CleaningService', [function() {\n        this.clean = function(res) {\n\n            //[0] helper function for cleaning data\n            function handleVal(val) {\n                var parsed = parseFloat(val);\n                return isNaN(parsed) ? \"no data\" : parsed;\n            }\n\n            //[1] Bring in raw data and start building clean data using the m0 data\n            var rawData = res.data.body.dates,\n                cleanData = rawData[0].oids.map(function(el) {\n                    var au_oz = handleVal(el.au_oz),\n                        price = handleVal(el.close),\n                        shares = handleVal(el.shares),\n                        auV = (!isNaN(au_oz) && !isNaN(price)) ? au_oz / (Math.pow(10, 6) * shares * price) : \"no data\",\n                        mcap = (!isNaN(shares) && !isNaN(price)) ? shares * price : \"no data\",\n                        grd = handleVal(el.grd),\n                        id = el.id,\n                        name = el.name,\n                        ticker = el.ticker;\n                        \n                        au_oz = isNaN(au_oz) ? au_oz : au_oz/Math.pow(10, 6)\n\n                    return {\n                        id: id,\n                        \"startDate\": rawData[0].ymd,\n                        \"dates\": [],\n                        name: name,\n                        ticker: ticker,\n                        \"metrics\": {\n                            auV: auV,\n                            au_oz: au_oz,\n                            mcap: mcap,\n                            grd: grd,\n                            price: price\n                        }\n                    };\n                });\n\n            //[2] Wherever possible, insert closing price on date for each id.\n\n            for (var i = 0, l = cleanData.length; i < l; i++) {\n                var stock = cleanData[i],\n                    id = stock.id;\n                for (var j = 0, l2 = rawData.length; j < l2; j++) {\n                    var element = rawData[j];\n                    if (element.ymd !== stock.startDate) {\n                        var filtered = element.oids.filter(function(oidData) {\n                                return oidData.id === id;\n                            }),\n                            close = filtered.length ? parseFloat(filtered[0].close) : \"no data\",\n                            change = (close === \"no data\") ? \"no data\" : ((close - stock.metrics.price) / (stock.metrics.price) * 100).toFixed(2) + \"%\";\n                        stock.dates.push({\n                            \"ymd\": element.ymd,\n                            close: close,\n                            change: change\n                        });\n                    }\n                }\n            }\n            cleanData = cleanData.filter(function(stock) {\n                return stock.metrics.price > 0;\n            });\n\n            return cleanData;\n        };\n    }]);"]}