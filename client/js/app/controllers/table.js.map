{"version":3,"sources":["../../../../development/js/app/controllers/table.js"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,WAAf,EACK,UADL,CACgB,WADhB,EAC6B,CAAC,QAAD,EAAW,cAAX,EAA2B,iBAA3B,EAA8C,iBAA9C,EAAiE,UAAS,MAAT,EAAiB,YAAjB,EAA+B,eAA/B,EAAgD,eAAhD,EAAiE;;AAEvJ,WAAO,KAAP,GAAe,EAAf;AACA,WAAO,SAAP,GAAmB,KAAnB;AACA,WAAO,IAAP,GAAc,MAAd;AACA,WAAO,QAAP,GAAkB;AACd,eAAO,8CADO;AAEd,iBAAS,+HAFK;AAGd,gBAAQ,mCAHM;AAId,eAAO,uGAJO;AAKd,iBAAS;AALK,KAAlB;AAOA,WAAO,GAAP,GAAa,UAAS,SAAT,EAAoB;AAC7B,eAAO,SAAP,GAAmB,SAAnB;AACA,YAAM,WAAW,OAAO,OAAP,CAAe,IAAf,CAAoB;AAAA,mBAAU,WAAW,SAArB;AAAA,SAApB,CAAjB;AACA,eAAO,IAAP,GAAc,WAAW,MAAX,GAAmB,OAAjC;AACH,KAJD;AAKA,WAAO,IAAP,GAAc,UAAS,KAAT,EAAgB;AAC1B,YAAI,YAAY,OAAO,SAAvB;AACA,YAAI,cAAc,MAAlB,EAA0B;AACtB,mBAAO,MAAM,IAAb;AACH,SAFD,MAGK,IAAI,cAAc,QAAlB,EAA4B;AAC7B,mBAAO,MAAM,MAAb;AACH,SAFI,MAGA,IAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC9B,mBAAO,WAAW,MAAM,KAAN,CAAY,IAAZ,CAAiB,UAAS,EAAT,EAAa;AAC5C,uBAAO,GAAG,GAAH,KAAW,OAAO,KAAP,CAAa,SAAb,CAAlB;AACH,aAFiB,EAEf,MAFI,IAEM,CAAC,CAFd;AAGH,SAJI,MAKA,IAAI,OAAO,IAAP,KAAgB,MAApB,EAA2B;AAC5B,mBAAO,CAAC,CAAD,GAAG,MAAM,OAAN,CAAc,SAAd,CAAV;AACH;AAEJ,KAjBD;;AAmBA,WAAO,QAAP,GAAkB,UAAS,CAAT,EAAY;AAC1B,qBAAa,KAAb,CAAmB,CAAnB,EAAsB,IAAtB,CAA2B,UAAS,IAAT,EAAe;AACtC,mBAAO,MAAP,GAAgB,KAAK,GAArB;AACA,mBAAO,aAAP,GAAuB,OAAO,MAAP,CAAc,MAArC;AACA,mBAAO,OAAP,GAAiB,OAAO,IAAP,CAAY,KAAK,GAAL,CAAS,CAAT,EAAY,OAAxB,CAAjB;AACA,mBAAO,KAAP,GAAe,KAAK,GAAL,CAAS,CAAT,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,UAAS,EAAT,EAAa;AAC9C,uBAAO,GAAG,GAAV;AACH,aAFc,CAAf;AAGA,gBAAI,OAAO,KAAP,KAAiB,EAAjB,IAAuB,OAAO,KAAP,KAAiB,EAA5C,EAAgD;AAC5C,uBAAO,KAAP,GAAe,OAAO,aAAtB;AACH;AACD,gBAAI,CAAC,MAAM,OAAO,SAAb,CAAD,IAA4B,OAAO,SAAP,IAAoB,OAAO,KAAP,CAAa,MAAjE,EAAyE;AACrE,oBAAI,CAAC,OAAO,KAAP,CAAa,MAAlB,EAA0B;AACtB,2BAAO,SAAP,GAAmB,KAAnB;AAEH,iBAHD,MAIK;AACD,2BAAO,SAAP,GAAmB,OAAO,KAAP,CAAa,MAAb,GAAsB,CAAzC;AACH;AACJ;AACJ,SAnBD;AAoBH,KArBD;;AAuBA,WAAO,WAAP,GAAqB,gBAAgB,WAArC;AACA,WAAO,aAAP,GAAuB,gBAAgB,aAAvC;;AAEA,WAAO,QAAP,CAAgB,YAAhB;AACH,CA/DwB,CAD7B","file":"table.js","sourcesContent":["angular.module('GoldPulse')\n    .controller('TableCtrl', ['$scope', 'QuoteService', 'ColoringService', 'QuantileService', function($scope, QuoteService, ColoringService, QuantileService) {\n\n        $scope.limit = 25;\n        $scope.selection = 'auV';\n        $scope.mode = 'test';\n        $scope.tooltips = {\n            'auV': \"number of ounces of gold per dollar invested\",\n            'au_oz': \"sum (in millions of ounces) of all proven, probable, measured, indicated and inferred gold ounces across all company projects\",\n            'mcap': 'market cap in millions of dollars',\n            'grd': 'average gold grade, in grams per tonne, across all company projects and all resource classificiations',\n            'price': 'closing price in CAD from TSX/TSXv'\n        };\n        $scope.set = function(selection) {\n            $scope.selection = selection;\n            const isMetric = $scope.metrics.find(metric => metric === selection);\n            $scope.mode = isMetric ? 'test': 'train';\n        };\n        $scope.sort = function(stock) {\n            let selection = $scope.selection;\n            if (selection === 'name') {\n                return stock.name;\n            }\n            else if (selection === 'ticker') {\n                return stock.ticker;\n            }\n            else if ($scope.mode === 'train') {\n                return parseFloat(stock.dates.find(function(el) {\n                    return el.ymd === $scope.dates[selection];\n                }).change) * -1;\n            }\n            else if ($scope.mode === 'test'){\n                return -1*stock.metrics[selection];\n            }\n                       \n        };\n\n        $scope.generate = function(m) {\n            QuoteService.fetch(m).then(function(data) {\n                $scope.stocks = data.res;\n                $scope.stocks_length = $scope.stocks.length;\n                $scope.metrics = Object.keys(data.res[0].metrics);\n                $scope.dates = data.res[0].dates.map(function(el) {\n                    return el.ymd;\n                });\n                if ($scope.limit !== 25 && $scope.limit !== 50) {\n                    $scope.limit = $scope.stocks_length;\n                }\n                if (!isNaN($scope.selection) && $scope.selection >= $scope.dates.length) {\n                    if (!$scope.dates.length) {\n                        $scope.selection = 'auV';\n\n                    }\n                    else {\n                        $scope.selection = $scope.dates.length - 1;\n                    }\n                }\n            });\n        };\n\n        $scope.colorByDate = ColoringService.colorByDate;\n        $scope.colorByMetric = ColoringService.colorByMetric;\n\n        $scope.generate('2013-01-04');\n    }]);"]}